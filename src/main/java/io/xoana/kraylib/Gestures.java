/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.xoana.kraylib;

public final class Gestures {
  public final static Gestures GESTURE_NONE = new Gestures("GESTURE_NONE", RaylibJNI.GESTURE_NONE_get());
  public final static Gestures GESTURE_TAP = new Gestures("GESTURE_TAP", RaylibJNI.GESTURE_TAP_get());
  public final static Gestures GESTURE_DOUBLETAP = new Gestures("GESTURE_DOUBLETAP", RaylibJNI.GESTURE_DOUBLETAP_get());
  public final static Gestures GESTURE_HOLD = new Gestures("GESTURE_HOLD", RaylibJNI.GESTURE_HOLD_get());
  public final static Gestures GESTURE_DRAG = new Gestures("GESTURE_DRAG", RaylibJNI.GESTURE_DRAG_get());
  public final static Gestures GESTURE_SWIPE_RIGHT = new Gestures("GESTURE_SWIPE_RIGHT", RaylibJNI.GESTURE_SWIPE_RIGHT_get());
  public final static Gestures GESTURE_SWIPE_LEFT = new Gestures("GESTURE_SWIPE_LEFT", RaylibJNI.GESTURE_SWIPE_LEFT_get());
  public final static Gestures GESTURE_SWIPE_UP = new Gestures("GESTURE_SWIPE_UP", RaylibJNI.GESTURE_SWIPE_UP_get());
  public final static Gestures GESTURE_SWIPE_DOWN = new Gestures("GESTURE_SWIPE_DOWN", RaylibJNI.GESTURE_SWIPE_DOWN_get());
  public final static Gestures GESTURE_PINCH_IN = new Gestures("GESTURE_PINCH_IN", RaylibJNI.GESTURE_PINCH_IN_get());
  public final static Gestures GESTURE_PINCH_OUT = new Gestures("GESTURE_PINCH_OUT", RaylibJNI.GESTURE_PINCH_OUT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static Gestures swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + Gestures.class + " with value " + swigValue);
  }

  private Gestures(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private Gestures(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private Gestures(String swigName, Gestures swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static Gestures[] swigValues = { GESTURE_NONE, GESTURE_TAP, GESTURE_DOUBLETAP, GESTURE_HOLD, GESTURE_DRAG, GESTURE_SWIPE_RIGHT, GESTURE_SWIPE_LEFT, GESTURE_SWIPE_UP, GESTURE_SWIPE_DOWN, GESTURE_PINCH_IN, GESTURE_PINCH_OUT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

